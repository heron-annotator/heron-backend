[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "heron-backend"
version = "0.0.0"
description = "Backend for Heron Annotator"
readme = "README.md"
requires-python = "==3.13"
license = "AGPL-3.0-or-later"
keywords = []
authors = [{ name = "Silvano Cerza", email = "silvanocerza@gmail.com" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "fastapi[standard]",
    "argon2-cffi",
    "pydantic-settings",
    "pyjwt",
    "asyncpg",
]

[project.urls]
Documentation = "https://github.com/heron-annotator/heron-backend#readme"
Issues = "https://github.com/heron-annotator/heron-backend/issues"
Source = "https://github.com/heron-annotator/heron-backend"

[tool.hatch.build.targets.wheel]
packages = ["heron"]

[tool.hatch.envs.default]
installer = "uv"
extra-dependencies = ["httpx", "pytest", "pytest-asyncio", "pytest-cov"]

[tool.hatch.envs.default.scripts]
test = "pytest --cov=heron {args:tests}"
test-nocov = "pytest {args:tests}"
cov-combine = "coverage combine"
cov-report = "coverage report"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:heron tests}"

[tool.coverage.run]
source_pkgs = ["heron"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
heron = ["heron"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
